<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/security 
     http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true">
		<intercept-url pattern="/movies/*" access="hasAnyAuthority('EDITOR')" />
		<intercept-url pattern="/news/*" access="hasAnyAuthority('EDITOR')" />
		<intercept-url pattern="/showtimes/*" access="hasAnyAuthority('EDITOR')" />
		<intercept-url pattern="/banners/*" access="hasAnyAuthority('MANAGER')" />
		<intercept-url pattern="/users/*" access="hasAnyAuthority('MANAGER')" />
		<form-login login-page="/admin/login" default-target-url="/admin/index" />
	</http>
	
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="egon" password="{noop}egon" authorities="MANAGER,EDITOR" />
				<user name="ray" password="{noop}ray" authorities="MANAGER" disabled="true" />
				<user name="venkman" password="{noop}venkman" authorities="EDITOR" />
			</user-service>
		</authentication-provider>

		<authentication-provider>
			<!-- <jdbc-user-service data-source-ref="datasource" /> -->
 			<password-encoder ref="passwordEncoder"/>
			<jdbc-user-service data-source-ref="datasource"
				users-by-username-query="select name, password,
					CASE WHEN status = 'ACTIVE' THEN 1 ELSE 0 END AS enabled
					from USERS where name = ?"
				authorities-by-username-query="select USERS.name, PROFILES.name as profile from PROFILES
					inner join USERS_PROFILES on PROFILES.id = USERS_PROFILES.profile_id
					inner join USERS on USERS_PROFILES.user_id = USERS.id
					where USERS.name = ?"
			/>
		</authentication-provider>

	</authentication-manager>
	
</b:beans>